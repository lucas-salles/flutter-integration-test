name: Publish Android, iOS and Web release

on:
  # workflow_dispatch:
  # push:
  #   tags:
  #     - 'dev/*'
  #     - 'prod/*'
  pull_request:
    branches:
      - main

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  build:
    name: Run CI/CD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'
          cache: true

      - name: Set environment and version from tag
        id: env
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}       # remove refs/tags/
            ENVIRONMENT=${TAG_NAME%%/*}             # before the first /
            VERSION=${TAG_NAME#*/}                  # after the first /

            # If environment is not dev or prod, use fallback
            if [[ "$ENVIRONMENT" != "dev" && "$ENVIRONMENT" != "prod" ]]; then
              echo "Warning: Environment not recognized, using default 'dev'"
              ENVIRONMENT="dev"
            fi
          else
            echo "No tag detected, using default environment 'dev'"
            ENVIRONMENT="dev"
            VERSION="manual"
          fi

          echo "environment=$ENVIRONMENT" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "Environment: $ENVIRONMENT"
          echo "Version: $VERSION"

      # ----------------- ANDROID -----------------
      # - name: Build Android
      #   run: flutter build appbundle --flavor ${{ env.environment }}

      # - name: Deploy to Play Store
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJson: ${{ env.environment == 'dev' && secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_DEV || secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_PROD }}
      #     packageName: ${{ env.environment == 'dev' && 'com.lucassales.flutter_integration_test.dev' || 'com.lucassales.flutter_integration_test' }}
      #     track: internal
      #     releaseFile: build/app/outputs/flutter-apk/app-${{ env.environment }}.apk

      # ----------------- WEB -----------------
      - name: Build Web
        run: |
          flutter build web --release --dart-define=APP_ENV=${{ env.environment }}

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ env.environment == 'dev' && secrets.FIREBASE_SERVICE_ACCOUNT_FLUTTER_INTEGRATION_TEST_FFB8E || secrets.FIREBASE_SERVICE_ACCOUNT_FLUTTER_INTEGRATION_TEST_8FAF5 }}
          channelId: live
          projectId: ${{ env.environment == 'dev' && 'flutter-integration-test-ffb8e' || env.environment == 'prod' && 'flutter-integration-test-8faf5' }}
