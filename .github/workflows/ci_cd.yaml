name: Publish Android, iOS and Web release

on:
  workflow_dispatch:
  push:
    tags:
      - 'dev/*'
      - 'prod/*'

jobs:
  build-web-android:
    name: Build Android and Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Set environment and version from tag
        id: env
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}       # remove refs/tags/
            ENVIRONMENT=${TAG_NAME%%/*}             # before the first /
            VERSION=${TAG_NAME#*/}                  # after the first /

            # If environment is not dev or prod, use fallback
            if [[ "$ENVIRONMENT" != "dev" && "$ENVIRONMENT" != "prod" ]]; then
              echo "Warning: Environment not recognized, using default 'dev'"
              ENVIRONMENT="dev"
            fi
          else
            echo "No tag detected, using default environment 'dev'"
            ENVIRONMENT="dev"
            VERSION="manual"
          fi

          echo "environment=$ENVIRONMENT" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "Environment: $ENVIRONMENT"
          echo "Version: $VERSION"

      # ----------------- ANDROID -----------------
      - name: Extract version from pubspec
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //')
          VERSION_NAME=${VERSION%%+*}
          VERSION_CODE=${VERSION##*+}
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "RELEASE_NAME=$VERSION_CODE ($VERSION_NAME)" >> $GITHUB_ENV

      - name: Create keystore
        run: |
          echo "${{ env.environment == 'dev' && secrets.ANDROID_KEYSTORE_FILE_DEV || secrets.ANDROID_KEYSTORE_FILE_PROD }}" | base64 --decode > android/keystore-${{ env.environment }}.jks

      - name: Create key.properties
        run: |
          cat <<EOF > android/${{ env.environment }}-key.properties
          storePassword=${{ env.environment == 'dev' && secrets.ANDROID_KEY_STORE_PASSWORD_DEV || secrets.ANDROID_KEY_STORE_PASSWORD_PROD }}
          keyPassword=${{ env.environment == 'dev' && secrets.ANDROID_KEY_STORE_PASSWORD_DEV || secrets.ANDROID_KEY_STORE_PASSWORD_PROD }}
          keyAlias=${{ env.environment }}Key
          storeFile=../keystore-${{ env.environment }}.jks
          EOF

      - name: Build Android
        run: flutter build appbundle --flavor ${{ env.environment }} --release

      - name: Deploy to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ env.environment == 'dev' && secrets.GOOGLE_PLAY_JSON_KEY_DEV || secrets.GOOGLE_PLAY_JSON_KEY_PROD }}
          packageName: ${{ env.environment == 'dev' && 'com.lucassales.flutter_integration_test.dev' || 'com.lucassales.flutter_integration_test' }}
          releaseFiles: build/app/outputs/bundle/${{ env.environment }}Release/app-${{ env.environment }}-release.aab
          releaseName: ${{ env.RELEASE_NAME }}
          track: internal
          status: draft
          whatsNewDirectory: distribution/whatsnew

      # ----------------- WEB -----------------
      - name: Build Web
        run: |
          flutter build web --release --dart-define=APP_ENV=${{ env.environment }}

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          firebaseServiceAccount: ${{ env.environment == 'dev' && secrets.FIREBASE_SERVICE_ACCOUNT_FLUTTER_INTEGRATION_TEST_FFB8E || secrets.FIREBASE_SERVICE_ACCOUNT_FLUTTER_INTEGRATION_TEST_8FAF5 }}
          channelId: live
          projectId: ${{ env.environment == 'dev' && 'flutter-integration-test-ffb8e' || env.environment == 'prod' && 'flutter-integration-test-8faf5' }}
          disableComment: true

  # build-ios:
  #   name: Build iOS
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.32.4'
  #         cache: true

  #     - name: Install dependencies
  #       run: flutter pub get

  #     - name: Set environment and version from tag
  #       id: env
  #       run: |
  #         if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
  #           TAG_NAME=${GITHUB_REF#refs/tags/}       # remove refs/tags/
  #           ENVIRONMENT=${TAG_NAME%%/*}             # before the first /
  #           VERSION=${TAG_NAME#*/}                  # after the first /

  #           # If environment is not dev or prod, use fallback
  #           if [[ "$ENVIRONMENT" != "dev" && "$ENVIRONMENT" != "prod" ]]; then
  #             echo "Warning: Environment not recognized, using default 'dev'"
  #             ENVIRONMENT="dev"
  #           fi
  #         else
  #           echo "No tag detected, using default environment 'dev'"
  #           ENVIRONMENT="dev"
  #           VERSION="manual"
  #         fi

  #         echo "environment=$ENVIRONMENT" >> $GITHUB_ENV
  #         echo "version=$VERSION" >> $GITHUB_ENV
  #         echo "Environment: $ENVIRONMENT"
  #         echo "Version: $VERSION"

  #     # ----------------- IOS -----------------
  #     - name: Build iOS
  #       run: |
  #         flutter build ipa --flavor ${{ env.environment }} --release

  #     - name: Upload to TestFlight
  #       uses: apple-actions/upload-testflight@v3
  #       with:
  #         app-path: build/ios/ipa/*.ipa
  #         api-key-id: ${{ env.environment == 'dev' && secrets.APP_STORE_KEY_ID_DEV || secrets.APP_STORE_KEY_ID_PROD }}
  #         api-key-issuer-id: ${{ env.environment == 'dev' && secrets.APP_STORE_ISSUER_ID_DEV || secrets.APP_STORE_ISSUER_ID_PROD }}
  #         api-private-key: ${{ env.environment == 'dev' && secrets.APP_STORE_P8_DEV || secrets.APP_STORE_P8_PROD }}
